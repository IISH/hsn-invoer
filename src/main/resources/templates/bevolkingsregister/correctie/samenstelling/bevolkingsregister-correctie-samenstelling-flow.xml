<?xml version="1.0" encoding="UTF-8"?>
<flow xmlns="http://www.springframework.org/schema/webflow"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xsi:schemaLocation="http://www.springframework.org/schema/webflow http://www.springframework.org/schema/webflow/spring-webflow-2.0.xsd">
  <!-- BS0C: IDENTIFICATIE BRON EN ONDERZOEKSPERSOON -->
  <view-state id="BS0C" view="bevolkingsregister/BS0IC" model="akte">
    <on-entry>
      <evaluate expression="bevolkingsregisterService.createNewAkteForCorrection()" result="flowScope.akte"/>
      <evaluate expression="flowScope.akte.setCorrectionCode(6)"/>
    </on-entry>

    <transition on="stop" to="stopEnd"/>

    <transition on="next" to="BS0A1">
      <evaluate expression="bevolkingsregisterService.editOP(flowScope.akte)"/>
    </transition>
  </view-state>

  <!-- BS0A1: HERNUMMEREN PERSONEN REGISTRATIE -->
  <view-state id="BS0A1" view="bevolkingsregister/BS0A1" model="akte">
    <transition on="stop" to="stopEnd"/>

    <transition on="next" to="nextPersonCheck">
      <evaluate expression="bevolkingsregisterService.renumberRegistrationPersons(flowScope.akte)"/>
      <evaluate expression="bevolkingsregisterService.registerAndSavePersons(flowScope.akte)"/>
    </transition>
  </view-state>

  <!-- BS1: PERSONEN -->
  <view-state id="BS1" view="bevolkingsregister/BS1-per-regel" model="akte">
    <transition on="person-dynamic-update">
      <evaluate
          expression="bevolkingsregisterService.updateDynamicField(flowScope.akte, requestParameters.person, requestParameters.type, requestParameters.seqNr, requestParameters.asMap())"/>
      <render fragments="#{'b3Content' + requestParameters.type}"/>
    </transition>

    <transition on="person-dynamic-add">
      <evaluate
          expression="bevolkingsregisterService.addNewDynamicField(flowScope.akte, requestParameters.person, requestParameters.type, requestParameters.asMap())"/>
      <render fragments="#{'b3Content' + requestParameters.type}"/>
    </transition>

    <transition on="person-dynamic-remove">
      <evaluate
          expression="bevolkingsregisterService.removeDynamicField(flowScope.akte, requestParameters.person, requestParameters.type, requestParameters.seqNr)"/>
      <render fragments="#{'b3Content' + requestParameters.type}"/>
    </transition>

    <transition on="refresh-person-dynamics">
      <evaluate expression="bevolkingsregisterService.registerAndSavePerson(flowScope.akte)"/>
      <render fragments="#{'b3Content' + requestParameters.type}"/>
    </transition>

    <transition on="refresh-person-dynamic">
      <render fragments="#{requestParameters.type + '_CONTAINER'}"/>
    </transition>

    <transition on="copy-line">
      <evaluate
          expression="bevolkingsregisterService.copyLine(flowScope.akte, requestParameters.person, requestParameters.copyLine)"/>
      <render fragments="currentPerson"/>
    </transition>

    <transition on="nextPerson" to="nextPersonCheck">
      <evaluate expression="bevolkingsregisterService.registerAndSavePerson(flowScope.akte)"/>
    </transition>

    <transition on="next" to="nextCheck">
      <evaluate expression="bevolkingsregisterService.registerAndSavePerson(flowScope.akte)"/>
    </transition>
  </view-state>

  <action-state id="nextPersonCheck">
    <evaluate expression="bevolkingsregisterHelper.registrationHasMaxPersons(flowScope.akte) == false"/>

    <transition on="yes" to="BS1">
      <evaluate expression="bevolkingsregisterService.setUpPerson(flowScope.akte)"/>
    </transition>

    <transition on="no" to="finishEnd">
      <evaluate expression="bevolkingsregisterService.registerAndSaveRegistration(flowScope.akte)"/>
    </transition>
  </action-state>

  <action-state id="nextCheck">
    <evaluate expression="bevolkingsregisterHelper.registrationRequiresAnotherPerson(flowScope.akte)"/>

    <transition on="yes" to="BS1">
      <evaluate expression="bevolkingsregisterService.setUpPerson(flowScope.akte)"/>
    </transition>

    <transition on="no" to="finishEnd">
      <evaluate expression="bevolkingsregisterService.registerAndSaveRegistration(flowScope.akte)"/>
    </transition>
  </action-state>

  <end-state id="stopEnd" view="redirect:/bevolkingsregister/hoofdmenu"/>

  <end-state id="finishEnd" view="redirect:/bevolkingsregister/hoofdmenu"/>
</flow>